{"version":3,"sources":["Components/Text.js","Library/LibraryDrawerListItem.js","Library/LibraryDrawerList.js","Library/LibraryDrawer.js","Components/IconButton.js","Library/LibraryBar.js","BookCard/BookCardIconSet.js","BookCard/BookCardContent.js","BookCard/BookCardMedia.js","BookCard/BookCard.js","BookCard/BookCardList.js","Library/LibraryContent.js","Library/Library.js","BooksAPI.js","Search/SearchInput.js","Search/SearchBar.js","Search/SearchContent.js","Search/Search.js","App.js","serviceWorker.js","index.js"],"names":["Text","_ref","text","variant","color","className","align","noWrap","react_default","a","createElement","Typography_default","defaultProps","withStyles","theme","margin","spacing","unit","withTheme","_ref$item","item","id","count","icon","classes","onShelfFilter","ListItem_default","button","onClick","ListItemIcon_default","core_index_es","badgeContent","ListItemText_default","primary","LibraryDrawerList","list","List_default","map","Library_LibraryDrawerListItem","key","LibraryDrawer","_ref$classes","toolbar","drawerContent","drawer","drawerPaper","container","drawerOpen","onDrawerToggle","react","Components_Text","href","Library_LibraryDrawerList","smUp","implementation","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","Object","defineProperty","breakpoints","up","width","flexShrink","mixins","IconButton","aria-label","withRouter","appBar","marginLeft","concat","menuButton","marginRight","display","title","flex","history","position","Components_IconButton","Menu_default","push","Search_default","controls","alignItems","paddingLeft","paddingBottom","book","onShelfChange","shelf","Favorite_default","FavoriteBorder_default","LocalLibrary_default","LocalLibraryOutlined_default","Book_default","BookOutlined_default","BookCardContent","authors","content","cardText","CardContent_default","join","_cardText","down","only","BookCardMedia","image","media","CardMedia_default","card","height","details","flexDirection","maxWidth","thumbnail","imageLinks","smallThumbnail","Card_default","BookCard_BookCardContent","textClassName","BookCard_BookCardIconSet","BookCard_BookCardMedia","root","flexGrow","palette","secondary","books","Grid_default","justify","md","Paper_default","src_BookCard_BookCard","padding","chip","filter","label","BookCard_BookCardList","Library","state","handleDrawerToggle","_this","setState","wrapperShelfFilter","props","_this$props","this","shelfList","index_es","length","objectSpread","CssBaseline_default","Library_LibraryBar","Library_LibraryDrawer","Library_LibraryContent","Component","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Content-Type","restLink","RestLink","uri","client","ApolloClient","link","cache","InMemoryCache","getAllBooks","gql","_templateObject","getBook","_templateObject2","searchBooks","_templateObject3","updateShelf","_templateObject4","get","bookId","query","variables","then","res","data","getAll","update","mutate","mutation","input","search","SearchInput","pesquisa","handleInputChange","e","target","value","handleSubmit","preventDefault","onSearch","_this$props$classes","searchIcon","inputInput","inputRoot","onSubmit","placeholder","autoFocus","onChange","borderRadius","shape","backgroundColor","fade","common","white","&:hover","pointerEvents","justifyContent","paddingTop","paddingRight","transition","transitions","create","ArrowBack_default","Search_SearchInput","Search","handleSearch","newBooks","error","booksProps","booksState","bookState","_booksProps$filter","b","bookProps","slicedToArray","Search_SearchBar","Search_SearchContent","App","componentDidMount","handleShelfFilter","handleShelfChange","newShelf","booksList","_booksList$newShelf$f","_books$filter","updatedBook","index","indexOf","toConsumableArray","_this2","_this$state","Route","exact","path","render","src_Library_Library","src_Search_Search","Boolean","window","location","hostname","match","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","ReactDOM","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4299e6c8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nconst Text = ({\n  text, variant, color, className, align, noWrap,\n}) => (\n  <Typography align={align} variant={variant} color={color} className={className} noWrap={noWrap}>\n    {text}\n  </Typography>\n);\n\nText.propTypes = {\n  text: PropTypes.string.isRequired,\n  variant: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  align: PropTypes.string,\n  noWrap: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nText.defaultProps = {\n  color: 'default',\n  className: '',\n  align: 'inherit',\n  noWrap: false,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Badge } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nconst LibraryDrawerListItem = ({\n  item: {\n    id, count, text, icon,\n  },\n  classes: { margin },\n  onShelfFilter,\n}) => (\n  <ListItem\n    button\n    onClick={() => {\n      onShelfFilter(id);\n    }}\n  >\n    <ListItemIcon>\n      <Badge className={margin} badgeContent={count} color=\"secondary\">\n        {icon}\n      </Badge>\n    </ListItemIcon>\n    {<ListItemText primary={text} />}\n  </ListItem>\n);\n\nLibraryDrawerListItem.propTypes = {\n  classes: PropTypes.shape({\n    margin: PropTypes.string.isRequired,\n  }).isRequired,\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    count: PropTypes.number.isRequired,\n    icon: PropTypes.instanceOf(Object).isRequired,\n  }).isRequired,\n  onShelfFilter: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(LibraryDrawerListItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport LibraryDrawerListItem from './LibraryDrawerListItem';\n\nconst LibraryDrawerList = ({ list, onShelfFilter }) => (\n  <List>\n    {list.map((item) => {\n      const { id } = item;\n      return <LibraryDrawerListItem key={id} item={item} onShelfFilter={onShelfFilter} />;\n    })}\n  </List>\n);\n\nLibraryDrawerList.propTypes = {\n  onShelfFilter: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default LibraryDrawerList;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Drawer, Hidden, Divider } from '@material-ui/core';\nimport Text from '../Components/Text';\nimport LibraryDrawerList from './LibraryDrawerList';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n});\n\nconst LibraryDrawer = ({\n  list,\n  onShelfFilter,\n  classes: { toolbar, drawer: drawerContent, drawerPaper },\n  container,\n  drawerOpen,\n  onDrawerToggle,\n}) => {\n  const drawer = (\n    <Fragment>\n      <div className={toolbar}>\n        <Text\n          variant=\"h5\"\n          align=\"center\"\n          text={<a href=\"https://github.com/samuel-tonini/my-reads\">My Reads</a>}\n        />\n        <Text\n          variant=\"h6\"\n          align=\"center\"\n          color=\"textSecondary\"\n          text={<a href=\"https://github.com/samuel-tonini\">by: Samuel Tonini</a>}\n        />\n      </div>\n      <Divider />\n      <LibraryDrawerList list={list} onShelfFilter={onShelfFilter} />\n    </Fragment>\n  );\n\n  return (\n    <nav className={drawerContent}>\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={drawerOpen}\n          onClose={onDrawerToggle}\n          classes={{\n            paper: drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n};\n\nLibraryDrawer.defaultProps = {\n  container: null,\n};\n\nLibraryDrawer.propTypes = {\n  classes: PropTypes.shape({\n    toolbar: PropTypes.string.isRequired,\n    drawer: PropTypes.string.isRequired,\n    drawerPaper: PropTypes.string.isRequired,\n  }).isRequired,\n  list: PropTypes.arrayOf(Object).isRequired,\n  container: PropTypes.instanceOf(Object),\n  onShelfFilter: PropTypes.func.isRequired,\n  onDrawerToggle: PropTypes.func.isRequired,\n  drawerOpen: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(LibraryDrawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton as IconedButton } from '@material-ui/core';\n\nconst IconButton = ({\n  text, icon, onClick, color, className,\n}) => (\n  <IconedButton aria-label={text} onClick={onClick} color={color} className={className}>\n    {icon}\n  </IconedButton>\n);\n\nIconButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  icon: PropTypes.instanceOf(Object).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nIconButton.defaultProps = {\n  text: '',\n  className: '',\n  color: 'default',\n};\n\nexport default IconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withRouter } from 'react-router-dom';\nimport Text from '../Components/Text';\nimport IconButton from '../Components/IconButton';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  title: {\n    flex: 1,\n  },\n});\n\nconst LibraryBar = ({ classes: { appBar, menuButton, title }, onDrawerToggle, history }) => (\n  <AppBar position=\"fixed\" className={appBar}>\n    <Toolbar>\n      <IconButton\n        color=\"inherit\"\n        text=\"Exibir Menu\"\n        onClick={onDrawerToggle}\n        className={menuButton}\n        icon={<MenuIcon />}\n      />\n      <Text variant=\"h6\" color=\"inherit\" noWrap className={title} text=\"Livros\" />\n      <IconButton\n        color=\"inherit\"\n        onClick={() => {\n          history.push('/search');\n        }}\n        icon={<SearchIcon />}\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nLibraryBar.propTypes = {\n  classes: PropTypes.shape({\n    appBar: PropTypes.string.isRequired,\n    menuButton: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n  onDrawerToggle: PropTypes.func.isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(LibraryBar));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Book from '@material-ui/icons/Book';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport LocalLibrary from '@material-ui/icons/LocalLibrary';\nimport LocalLibraryOutlined from '@material-ui/icons/LocalLibraryOutlined';\nimport IconButton from '../Components/IconButton';\n\nconst styles = theme => ({\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n  },\n});\n\nconst BookCardIconSet = ({ book, onShelfChange, classes: { controls } }) => {\n  const { shelf } = book;\n\n  return (\n    <div className={controls}>\n      <IconButton\n        text=\"Quero ler\"\n        icon={shelf === 'wantToRead' ? <Favorite /> : <FavoriteBorder />}\n        onClick={() => {\n          onShelfChange(book, 'wantToRead');\n        }}\n      />\n      <IconButton\n        text=\"Lendo\"\n        icon={shelf === 'currentlyReading' ? <LocalLibrary /> : <LocalLibraryOutlined />}\n        onClick={() => {\n          onShelfChange(book, 'currentlyReading');\n        }}\n      />\n      <IconButton\n        text=\"Lido\"\n        icon={shelf === 'read' ? <Book /> : <BookOutlined />}\n        onClick={() => {\n          onShelfChange(book, 'read');\n        }}\n      />\n    </div>\n  );\n};\n\nBookCardIconSet.propTypes = {\n  book: PropTypes.instanceOf(Object).isRequired,\n  classes: PropTypes.shape({\n    controls: PropTypes.string.isRequired,\n  }).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(BookCardIconSet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport Text from '../Components/Text';\n\nconst styles = theme => ({\n  content: {\n    flex: '1 0 auto',\n  },\n  cardText: {\n    [theme.breakpoints.down('sm')]: {\n      width: 100,\n    },\n    [theme.breakpoints.only('md')]: {\n      width: 150,\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: 300,\n    },\n  },\n});\n\nconst BookCardContent = ({ title, authors, classes: { content, cardText } }) => (\n  <CardContent className={content}>\n    <Text variant=\"h5\" className={cardText} text={title} />\n    <Text\n      variant=\"subtitle1\"\n      color=\"textSecondary\"\n      className={cardText}\n      text={(authors || []).join(', ')}\n    />\n  </CardContent>\n);\n\nBookCardContent.propTypes = {\n  authors: PropTypes.arrayOf(String),\n  title: PropTypes.string,\n  classes: PropTypes.shape({\n    content: PropTypes.string.isRequired,\n    cardText: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nBookCardContent.defaultProps = {\n  authors: [],\n  title: '',\n};\n\nexport default withStyles(styles)(BookCardContent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst styles = () => ({\n  media: {\n    width: 151,\n  },\n});\n\nconst BookCardMedia = ({ image, title, classes: { media } }) => (\n  <CardMedia className={media} image={image} title={title} />\n);\n\nBookCardMedia.propTypes = {\n  classes: PropTypes.shape({\n    media: PropTypes.string.isRequired,\n  }).isRequired,\n  image: PropTypes.string,\n  title: PropTypes.string,\n};\n\nBookCardMedia.defaultProps = {\n  image: '',\n  title: '',\n};\n\nexport default withStyles(styles)(BookCardMedia);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport BookCardIconSet from './BookCardIconSet';\nimport BookCardContent from './BookCardContent';\nimport BookCardMedia from './BookCardMedia';\n\nconst styles = theme => ({\n  card: {\n    display: 'flex',\n    [theme.breakpoints.up('lg')]: {\n      height: 200,\n    },\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardText: {\n    maxWidth: 300,\n  },\n});\n\nconst BookCard = ({ classes: { card, details, cardText }, book, onShelfChange }) => {\n  const { title, authors } = book;\n\n  const thumbnail = book.imageLinks\n    ? book.imageLinks.smallThumbnail\n    : 'https://affinitas.com.br/wp-content/uploads/2017/03/indisponivel.png';\n\n  return (\n    <Card className={card}>\n      <div className={details}>\n        <BookCardContent title={title} authors={authors} textClassName={cardText} />\n        <BookCardIconSet book={book} onShelfChange={onShelfChange} />\n      </div>\n      {thumbnail && <BookCardMedia image={thumbnail} title={title} />}\n    </Card>\n  );\n};\n\nBookCard.propTypes = {\n  classes: PropTypes.shape({\n    card: PropTypes.string.isRequired,\n    details: PropTypes.string.isRequired,\n    cardText: PropTypes.string.isRequired,\n  }).isRequired,\n  book: PropTypes.instanceOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(BookCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport BookCard from './BookCard';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    color: theme.palette.text.secondary,\n  },\n});\n\nconst BookCardList = ({ classes: { root, paper }, books, onShelfChange }) => (\n  <div className={root}>\n    <Grid container spacing={24} justify=\"center\">\n      {books.map((book) => {\n        const { id } = book;\n        return (\n          <Grid item md=\"auto\" key={id}>\n            <Paper className={paper}>\n              <BookCard book={book} onShelfChange={onShelfChange} />\n            </Paper>\n          </Grid>\n        );\n      })}\n    </Grid>\n  </div>\n);\n\nBookCardList.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string.isRequired,\n    paper: PropTypes.string.isRequired,\n  }).isRequired,\n  books: PropTypes.instanceOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(BookCardList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip } from '@material-ui/core';\nimport BookCardList from '../BookCard/BookCardList';\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n  chip: {\n    margin: theme.spacing.unit,\n  },\n});\n\nconst LibraryContent = ({\n  classes: { content, toolbar, chip },\n  filter,\n  onShelfChange,\n  onShelfFilter,\n  books,\n}) => (\n  <main className={content}>\n    <div className={toolbar} />\n    {filter && (\n      <Chip\n        color=\"primary\"\n        label=\"Mostrar todos os livros\"\n        onClick={() => onShelfFilter('')}\n        className={chip}\n      />\n    )}\n    <BookCardList\n      books={filter ? books.filter(book => book.shelf === filter) : books}\n      onShelfChange={onShelfChange}\n    />\n  </main>\n);\n\nLibraryContent.propTypes = {\n  classes: PropTypes.shape({\n    content: PropTypes.string.isRequired,\n    toolbar: PropTypes.string.isRequired,\n    chip: PropTypes.string.isRequired,\n  }).isRequired,\n  books: PropTypes.arrayOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n  onShelfFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(LibraryContent);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Book, Favorite, LocalLibrary } from '@material-ui/icons';\nimport LibraryDrawer from './LibraryDrawer';\nimport LibraryBar from './LibraryBar';\nimport LibraryContent from './LibraryContent';\n\nconst styles = () => ({\n  root: {\n    display: 'flex',\n  },\n});\n\nclass Library extends Component {\n  state = {\n    drawerOpen: false,\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ drawerOpen: !state.drawerOpen }));\n  };\n\n  wrapperShelfFilter = (filter) => {\n    const { drawerOpen } = this.state;\n\n    if (drawerOpen) {\n      this.handleDrawerToggle();\n    }\n\n    const { onShelfFilter } = this.props;\n    onShelfFilter(filter);\n  };\n\n  render() {\n    const {\n      classes: { root },\n      container,\n      books,\n      onShelfChange,\n      filter,\n    } = this.props;\n    const { drawerOpen } = this.state;\n\n    let shelfList = [\n      {\n        text: 'Quero Ler',\n        icon: <Favorite />,\n        id: 'wantToRead',\n        count: 0,\n      },\n      {\n        text: 'Lendo',\n        icon: <LocalLibrary />,\n        id: 'currentlyReading',\n        count: 0,\n      },\n      {\n        text: 'Lido',\n        icon: <Book />,\n        id: 'read',\n        count: 0,\n      },\n    ];\n\n    shelfList = shelfList.map((item) => {\n      const { id } = item;\n      const count = books.filter(({ shelf }) => shelf === id).length;\n      return { ...item, count };\n    });\n\n    return (\n      <div className={root}>\n        <CssBaseline />\n        <LibraryBar onDrawerToggle={this.handleDrawerToggle} />\n        <LibraryDrawer\n          list={shelfList}\n          onShelfFilter={this.wrapperShelfFilter}\n          container={container}\n          drawerOpen={drawerOpen}\n          onDrawerToggle={this.handleDrawerToggle}\n        />\n        <LibraryContent\n          books={books}\n          onShelfChange={onShelfChange}\n          onShelfFilter={this.wrapperShelfFilter}\n          filter={filter}\n        />\n      </div>\n    );\n  }\n}\n\nLibrary.defaultProps = {\n  container: null,\n};\n\nLibrary.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string.isRequired,\n  }).isRequired,\n  container: PropTypes.instanceOf(Object),\n  books: PropTypes.instanceOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n  onShelfFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Library);\n","import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { RestLink } from 'apollo-link-rest';\nimport gql from 'graphql-tag';\n\nconst api = 'https://reactnd-books-api.udacity.com';\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) {\n  token = localStorage.token = Math.random()\n    .toString(36)\n    .substr(-8);\n}\n\nconst headers = {\n  Accept: 'application/json',\n  Authorization: token,\n  'Content-Type': 'application/json',\n};\n\nconst restLink = new RestLink({\n  uri: api, // this is your API base url\\\n  headers,\n});\n\nconst client = new ApolloClient({\n  link: restLink,\n  cache: new InMemoryCache(),\n});\n\nconst getAllBooks = gql`\n  query {\n    books @rest(type: \"Books\", path: \"/books\") {\n      books @type(name: \"Book\") {\n        title\n        authors\n        imageLinks @type(name: \"ImageLinks\") {\n          smallThumbnail\n        }\n        id\n        shelf\n      }\n    }\n  }\n`;\n\nconst getBook = gql`\n  query get {\n    book(id: $id) @rest(type: \"Books\", path: \"/books/:id\") {\n      book @type(name: \"Book\") {\n        title\n        authors\n        imageLinks @type(name: \"ImageLinks\") {\n          smallThumbnail\n        }\n        id\n        shelf\n      }\n    }\n  }\n`;\n\nconst searchBooks = gql`\n  mutation search {\n    search(input: $input) @rest(type: \"Books\", path: \"/search\", method: \"POST\") {\n      books @type(name: \"Book\") {\n        title\n        authors\n        imageLinks @type(name: \"ImageLinks\") {\n          smallThumbnail\n        }\n        id\n        shelf\n      }\n    }\n  }\n`;\n\nconst updateShelf = gql`\n  mutation update {\n    update(input: $input, id: $id) @rest(type: \"Shelfs\", path: \"/books/:id\", method: \"PUT\") {\n      currentlyReading\n      wantToRead\n      read\n    }\n  }\n`;\n\nexport const get = bookId => client.query({ query: getBook, variables: { id: bookId } }).then(res => res.data.book.book);\n\nexport const getAll = () => client.query({ query: getAllBooks }).then(res => res.data.books.books);\n\nexport const update = (book, shelf) => client\n  .mutate({\n    mutation: updateShelf,\n    variables: { input: { shelf }, id: book.id },\n  })\n  .then(res => res.data.update);\n\nexport const search = query => client\n  .mutate({\n    mutation: searchBooks,\n    variables: { input: { query } },\n  })\n  .then(res => res.data.search.books);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { InputBase } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: theme.spacing.unit,\n    width: '100%',\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n  },\n});\n\nclass SearchInput extends Component {\n  state = {\n    pesquisa: '',\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ pesquisa: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { onSearch } = this.props;\n    const { pesquisa } = this.state;\n\n    onSearch(pesquisa);\n  };\n\n  render() {\n    const {\n      classes: {\n        search, searchIcon, inputInput, inputRoot,\n      },\n    } = this.props;\n    const { pesquisa } = this.state;\n\n    return (\n      <form className={search} onSubmit={this.handleSubmit}>\n        <div className={searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Digite o nome do livro ou do(s) autor(es)\"\n          classes={{\n            root: inputRoot,\n            input: inputInput,\n          }}\n          autoFocus\n          value={pesquisa}\n          onChange={this.handleInputChange}\n        />\n      </form>\n    );\n  }\n}\n\nSearchInput.propTypes = {\n  classes: PropTypes.shape({\n    search: PropTypes.string.isRequired,\n    searchIcon: PropTypes.string.isRequired,\n    inputInput: PropTypes.string.isRequired,\n    inputRoot: PropTypes.string.isRequired,\n  }).isRequired,\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport { withRouter } from 'react-router-dom';\nimport IconButton from '../Components/IconButton';\nimport Text from '../Components/Text';\nimport SearchInput from './SearchInput';\n\nconst SearchBar = ({ history, onSearch }) => (\n  <AppBar position=\"fixed\">\n    <Toolbar>\n      <IconButton\n        color=\"inherit\"\n        onClick={() => {\n          history.push('/');\n        }}\n        icon={<ArrowBack />}\n      />\n      <Text text=\"Pesquisa\" variant=\"h6\" color=\"inherit\" />\n      <SearchInput onSearch={onSearch} />\n    </Toolbar>\n  </AppBar>\n);\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport BookCardList from '../BookCard/BookCardList';\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nconst SearchContent = ({ classes: { content, toolbar }, onShelfChange, books }) => (\n  <main className={content}>\n    <div className={toolbar} />\n    <BookCardList books={books} onShelfChange={onShelfChange} />\n  </main>\n);\n\nSearchContent.propTypes = {\n  classes: PropTypes.shape({\n    content: PropTypes.string.isRequired,\n    toolbar: PropTypes.string.isRequired,\n  }).isRequired,\n  books: PropTypes.arrayOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchContent);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { search } from '../BooksAPI';\nimport SearchBar from './SearchBar';\nimport SearchContent from './SearchContent';\n\nconst styles = () => ({\n  root: {\n    width: '100%',\n  },\n});\n\nclass Search extends Component {\n  state = {\n    books: [],\n  };\n\n  handleSearch = (pesquisa) => {\n    if (pesquisa === '') {\n      this.setState({ books: [] });\n    } else {\n      search(pesquisa).then((books) => {\n        const newBooks = books && !books.error ? books : [];\n        this.setState({ books: newBooks });\n      });\n    }\n  };\n\n  render() {\n    const {\n      classes: { root },\n      books: booksProps,\n      onShelfChange,\n    } = this.props;\n\n    let { books: booksState } = this.state;\n\n    // Merge entre o livros da busca e os das estantes do usuario\n    booksState = booksState.length > 0\n      ? booksState.map((bookState) => {\n        const [bookProps] = booksProps.filter(b => b.id === bookState.id);\n        if (bookProps) {\n          return { ...bookState, shelf: bookProps.shelf };\n        }\n        return bookState;\n      })\n      : [];\n\n    return (\n      <div className={root}>\n        <CssBaseline />\n        <SearchBar onSearch={this.handleSearch} />\n        <SearchContent books={booksState} onShelfChange={onShelfChange} />\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string.isRequired,\n  }).isRequired,\n  books: PropTypes.instanceOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Search);\n","import React, { Fragment, Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Library from './Library/Library';\nimport Search from './Search/Search';\nimport { getAll, update, get } from './BooksAPI';\n\nclass App extends Component {\n  // Books = livros que estam em alguma prateleira\n  // Filter = Filtra os livros por prateleira, em branco lista todos os livros\n  state = {\n    books: [],\n    filter: '',\n  };\n\n  // Busca todos os livros apos a montagem do componente\n  componentDidMount = () => getAll().then(books => this.setState({ books }));\n\n  // Controle do filtro atual usado\n  handleShelfFilter = filter => this.setState({ filter });\n\n  // Atualiza a prateleira do livro\n  handleShelfChange = (book, shelf) => {\n    // Se a nova prateleira for a mesma da atual, significa que nao eh\n    // para atualizar a prateleira mas para remove-la\n    const newShelf = book.shelf === shelf ? 'none' : shelf;\n    update(book, newShelf).then((booksList) => {\n      const { books } = this.state;\n      if (newShelf === 'none') {\n        // Se removeu a prateleira, remove do State\n        this.setState({ books: books.filter(b => b.id !== book.id) });\n      } else {\n        // Se atualizou a prateleira, atualiza no State\n\n        // Verifica se a atualizacao foi bem sucedida\n        const [bookId] = booksList[newShelf].filter(id => id === book.id);\n\n        // Busca o livro a ser atualizado\n        const [updatedBook] = books.filter(b => b.id === book.id);\n\n        // Atualizou com sucesso?\n        if (bookId) {\n          // Livro ja existe no State\n          if (updatedBook) {\n            // Apenas atualiza a prateleira\n            const index = books.indexOf(updatedBook);\n            books[index].shelf = newShelf;\n            this.setState({ books });\n          } else {\n            // Se nao, busca o livro e concatena no final do State\n            get(bookId).then((b) => {\n              this.setState({ books: [...books, b] });\n            });\n          }\n        }\n      }\n    });\n  };\n\n  render() {\n    const { books, filter } = this.state;\n    return (\n      <Fragment>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Library\n              onShelfChange={this.handleShelfChange}\n              books={books}\n              onShelfFilter={this.handleShelfFilter}\n              filter={filter}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/search\"\n          render={() => <Search onShelfChange={this.handleShelfChange} books={books} />}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}