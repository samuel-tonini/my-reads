{"version":3,"sources":["Components/Text.js","Library/LibraryDrawerListItem.js","Library/LibraryDrawerList.js","Library/LibraryDrawer.js","Components/IconButton.js","Library/LibraryBar.js","BookCard/BookCardIconSet.js","BookCard/BookCardContent.js","BookCard/BookCardMedia.js","BookCard/BookCard.js","BookCard/BookCardList.js","Library/LibraryContent.js","Library/Library.js","BooksAPI.js","Search/SearchInput.js","Search/SearchBar.js","Search/SearchContent.js","Search/Search.js","App.js","index.js"],"names":["Text","_ref","text","variant","color","className","align","noWrap","react_default","a","createElement","Typography_default","defaultProps","withStyles","theme","margin","spacing","unit","withTheme","_ref$item","item","id","count","icon","classes","onShelfFilter","ListItem_default","button","onClick","ListItemIcon_default","core_index_es","badgeContent","ListItemText_default","primary","LibraryDrawerList","list","List_default","map","Library_LibraryDrawerListItem","key","LibraryDrawer","_ref$classes","toolbar","drawerContent","drawer","drawerPaper","container","drawerOpen","onDrawerToggle","react","Components_Text","Library_LibraryDrawerList","smUp","implementation","anchor","open","onClose","paper","ModalProps","keepMounted","xsDown","Object","defineProperty","breakpoints","up","width","flexShrink","mixins","IconButton","aria-label","withRouter","appBar","marginLeft","concat","menuButton","marginRight","display","title","flex","history","position","Components_IconButton","Menu_default","push","Search_default","controls","alignItems","paddingLeft","paddingBottom","book","onShelfChange","shelf","Favorite_default","FavoriteBorder_default","LocalLibrary_default","LocalLibraryOutlined_default","Book_default","BookOutlined_default","BookCardContent","authors","content","cardText","CardContent_default","join","maxWidth","BookCardMedia","image","media","CardMedia_default","card","height","details","flexDirection","thumbnail","imageLinks","smallThumbnail","Card_default","BookCard_BookCardContent","textClassName","BookCard_BookCardIconSet","BookCard_BookCardMedia","root","flexGrow","palette","secondary","books","Grid_default","md","Paper_default","src_BookCard_BookCard","padding","chip","filter","label","BookCard_BookCardList","Library","state","handleDrawerToggle","_this","setState","_this$props","this","props","shelfList","index_es","length","objectSpread","CssBaseline_default","Library_LibraryBar","Library_LibraryDrawer","Library_LibraryContent","Component","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","Content-Type","restLink","RestLink","uri","client","ApolloClient","link","cache","InMemoryCache","getAllBooks","gql","_templateObject","getBook","_templateObject2","searchBooks","_templateObject3","updateShelf","_templateObject4","get","bookId","query","variables","then","res","data","getAll","update","mutate","mutation","input","search","SearchInput","pesquisa","handleInputChange","e","target","value","handleSubmit","preventDefault","onSearch","_this$props$classes","searchIcon","inputInput","inputRoot","onSubmit","placeholder","autoFocus","onChange","borderRadius","shape","backgroundColor","fade","common","white","&:hover","pointerEvents","justifyContent","paddingTop","paddingRight","transition","transitions","create","ArrowBack_default","Search_SearchInput","Search","handleSearch","error","booksProps","booksState","bookState","_booksProps$filter","b","bookProps","slicedToArray","Search_SearchBar","Search_SearchContent","App","componentDidMount","handleShelfFilter","handleShelfChange","newShelf","booksList","_booksList$newShelf$f","_books$filter","updatedBook","index","indexOf","toConsumableArray","_this2","_this$state","Route","exact","path","render","src_Library_Library","src_Search_Search","window","__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3893f308.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nconst Text = ({\n  text, variant, color, className, align, noWrap,\n}) => (\n  <Typography align={align} variant={variant} color={color} className={className} noWrap={noWrap}>\n    {text}\n  </Typography>\n);\n\nText.propTypes = {\n  text: PropTypes.string.isRequired,\n  variant: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  align: PropTypes.string,\n  noWrap: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nText.defaultProps = {\n  color: 'default',\n  className: '',\n  align: 'inherit',\n  noWrap: false,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Badge } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit * 2,\n  },\n});\n\nconst LibraryDrawerListItem = ({\n  item: {\n    id, count, text, icon,\n  },\n  classes: { margin },\n  onShelfFilter,\n}) => (\n  <ListItem\n    button\n    onClick={() => {\n      onShelfFilter(id);\n    }}\n  >\n    <ListItemIcon>\n      <Badge className={margin} badgeContent={count} color=\"secondary\">\n        {icon}\n      </Badge>\n    </ListItemIcon>\n    {<ListItemText primary={text} />}\n  </ListItem>\n);\n\nLibraryDrawerListItem.propTypes = {\n  classes: PropTypes.shape({\n    margin: PropTypes.string.isRequired,\n  }).isRequired,\n  item: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    count: PropTypes.number.isRequired,\n    icon: PropTypes.instanceOf(Object).isRequired,\n  }).isRequired,\n  onShelfFilter: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(LibraryDrawerListItem);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport LibraryDrawerListItem from './LibraryDrawerListItem';\n\nconst LibraryDrawerList = ({ list, onShelfFilter }) => (\n  <List>\n    {list.map((item) => {\n      const { id } = item;\n      return <LibraryDrawerListItem key={id} item={item} onShelfFilter={onShelfFilter} />;\n    })}\n  </List>\n);\n\nLibraryDrawerList.propTypes = {\n  onShelfFilter: PropTypes.func.isRequired,\n  list: PropTypes.arrayOf(Object).isRequired,\n};\n\nexport default LibraryDrawerList;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Drawer, Hidden, Divider } from '@material-ui/core';\nimport Text from '../Components/Text';\nimport LibraryDrawerList from './LibraryDrawerList';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n  },\n});\n\nconst LibraryDrawer = ({\n  list,\n  onShelfFilter,\n  classes: { toolbar, drawer: drawerContent, drawerPaper },\n  container,\n  drawerOpen,\n  onDrawerToggle,\n}) => {\n  const drawer = (\n    <Fragment>\n      <div className={toolbar}>\n        <Text variant=\"h5\" align=\"center\" text=\"My Reads\" />\n        <Text variant=\"h6\" align=\"center\" color=\"textSecondary\" text=\"by: Samuel Tonini\" />\n      </div>\n      <Divider />\n      <LibraryDrawerList list={list} onShelfFilter={onShelfFilter} />\n    </Fragment>\n  );\n\n  return (\n    <nav className={drawerContent}>\n      <Hidden smUp implementation=\"css\">\n        <Drawer\n          container={container}\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={drawerOpen}\n          onClose={onDrawerToggle}\n          classes={{\n            paper: drawerPaper,\n          }}\n          ModalProps={{\n            keepMounted: true,\n          }}\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n      <Hidden xsDown implementation=\"css\">\n        <Drawer\n          classes={{\n            paper: drawerPaper,\n          }}\n          variant=\"permanent\"\n          open\n        >\n          {drawer}\n        </Drawer>\n      </Hidden>\n    </nav>\n  );\n};\n\nLibraryDrawer.defaultProps = {\n  container: null,\n};\n\nLibraryDrawer.propTypes = {\n  classes: PropTypes.shape({\n    toolbar: PropTypes.string.isRequired,\n    drawer: PropTypes.string.isRequired,\n    drawerPaper: PropTypes.string.isRequired,\n  }).isRequired,\n  list: PropTypes.arrayOf(Object).isRequired,\n  container: PropTypes.instanceOf(Object),\n  onShelfFilter: PropTypes.func.isRequired,\n  onDrawerToggle: PropTypes.func.isRequired,\n  drawerOpen: PropTypes.bool.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(LibraryDrawer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IconButton as IconedButton } from '@material-ui/core';\n\nconst IconButton = ({\n  text, icon, onClick, color, className,\n}) => (\n  <IconedButton aria-label={text} onClick={onClick} color={color} className={className}>\n    {icon}\n  </IconedButton>\n);\n\nIconButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n  className: PropTypes.string,\n  icon: PropTypes.instanceOf(Object).isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nIconButton.defaultProps = {\n  text: '',\n  className: '',\n  color: 'default',\n};\n\nexport default IconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { withRouter } from 'react-router-dom';\nimport Text from '../Components/Text';\nimport IconButton from '../Components/IconButton';\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n  menuButton: {\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  title: {\n    flex: 1,\n  },\n});\n\nconst LibraryBar = ({ classes: { appBar, menuButton, title }, onDrawerToggle, history }) => (\n  <AppBar position=\"fixed\" className={appBar}>\n    <Toolbar>\n      <IconButton\n        color=\"inherit\"\n        text=\"Exibir Menu\"\n        onClick={onDrawerToggle}\n        className={menuButton}\n        icon={<MenuIcon />}\n      />\n      <Text variant=\"h6\" color=\"inherit\" noWrap className={title} text=\"Livros\" />\n      <IconButton\n        color=\"inherit\"\n        onClick={() => {\n          history.push('/search');\n        }}\n        icon={<SearchIcon />}\n      />\n    </Toolbar>\n  </AppBar>\n);\n\nLibraryBar.propTypes = {\n  classes: PropTypes.shape({\n    appBar: PropTypes.string.isRequired,\n    menuButton: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n  onDrawerToggle: PropTypes.func.isRequired,\n};\n\nexport default withRouter(withStyles(styles, { withTheme: true })(LibraryBar));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Book from '@material-ui/icons/Book';\nimport BookOutlined from '@material-ui/icons/BookOutlined';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport LocalLibrary from '@material-ui/icons/LocalLibrary';\nimport LocalLibraryOutlined from '@material-ui/icons/LocalLibraryOutlined';\nimport IconButton from '../Components/IconButton';\n\nconst styles = theme => ({\n  controls: {\n    display: 'flex',\n    alignItems: 'center',\n    paddingLeft: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n  },\n});\n\nconst BookCardIconSet = ({ book, onShelfChange, classes: { controls } }) => {\n  const { shelf } = book;\n\n  return (\n    <div className={controls}>\n      <IconButton\n        text=\"Quero ler\"\n        icon={shelf === 'wantToRead' ? <Favorite /> : <FavoriteBorder />}\n        onClick={() => {\n          onShelfChange(book, 'wantToRead');\n        }}\n      />\n      <IconButton\n        text=\"Lendo\"\n        icon={shelf === 'currentlyReading' ? <LocalLibrary /> : <LocalLibraryOutlined />}\n        onClick={() => {\n          onShelfChange(book, 'currentlyReading');\n        }}\n      />\n      <IconButton\n        text=\"Lido\"\n        icon={shelf === 'read' ? <Book /> : <BookOutlined />}\n        onClick={() => {\n          onShelfChange(book, 'read');\n        }}\n      />\n    </div>\n  );\n};\n\nBookCardIconSet.propTypes = {\n  book: PropTypes.instanceOf(Object).isRequired,\n  classes: PropTypes.shape({\n    controls: PropTypes.string.isRequired,\n  }).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(BookCardIconSet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport Text from '../Components/Text';\n\nconst styles = () => ({\n  content: {\n    flex: '1 0 auto',\n  },\n  cardText: {\n    maxWidth: 300,\n  },\n});\n\nconst BookCardContent = ({ title, authors, classes: { content, cardText } }) => (\n  <CardContent className={content}>\n    <Text variant=\"h5\" className={cardText} text={title} />\n    <Text\n      variant=\"subtitle1\"\n      color=\"textSecondary\"\n      className={cardText}\n      text={(authors || []).join(', ')}\n    />\n  </CardContent>\n);\n\nBookCardContent.propTypes = {\n  authors: PropTypes.arrayOf(String),\n  title: PropTypes.string,\n  classes: PropTypes.shape({\n    content: PropTypes.string.isRequired,\n    cardText: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nBookCardContent.defaultProps = {\n  authors: [],\n  title: '',\n};\n\nexport default withStyles(styles)(BookCardContent);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst styles = () => ({\n  media: {\n    width: 151,\n  },\n});\n\nconst BookCardMedia = ({ image, title, classes: { media } }) => (\n  <CardMedia className={media} image={image} title={title} />\n);\n\nBookCardMedia.propTypes = {\n  classes: PropTypes.shape({\n    media: PropTypes.string.isRequired,\n  }).isRequired,\n  image: PropTypes.string,\n  title: PropTypes.string,\n};\n\nBookCardMedia.defaultProps = {\n  image: '',\n  title: '',\n};\n\nexport default withStyles(styles)(BookCardMedia);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport BookCardIconSet from './BookCardIconSet';\nimport BookCardContent from './BookCardContent';\nimport BookCardMedia from './BookCardMedia';\n\nconst styles = () => ({\n  card: {\n    display: 'flex',\n    height: 200,\n  },\n  details: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardText: {\n    maxWidth: 300,\n  },\n});\n\nconst BookCard = ({ classes: { card, details, cardText }, book, onShelfChange }) => {\n  const {\n    title,\n    authors,\n    imageLinks: { smallThumbnail: thumbnail },\n  } = book;\n  return (\n    <Card className={card}>\n      <div className={details}>\n        <BookCardContent title={title} authors={authors} textClassName={cardText} />\n        <BookCardIconSet book={book} onShelfChange={onShelfChange} />\n      </div>\n      <BookCardMedia image={thumbnail} title={title} />\n    </Card>\n  );\n};\n\nBookCard.propTypes = {\n  classes: PropTypes.shape({\n    card: PropTypes.string.isRequired,\n    details: PropTypes.string.isRequired,\n    cardText: PropTypes.string.isRequired,\n  }).isRequired,\n  book: PropTypes.instanceOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(BookCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport BookCard from './BookCard';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    color: theme.palette.text.secondary,\n  },\n});\n\nconst BookCardList = ({ classes: { root, paper }, books, onShelfChange }) => (\n  <div className={root}>\n    <Grid container spacing={24}>\n      {books.map((book) => {\n        const { id } = book;\n        return (\n          <Grid item md=\"auto\" key={id}>\n            <Paper className={paper}>\n              <BookCard book={book} onShelfChange={onShelfChange} />\n            </Paper>\n          </Grid>\n        );\n      })}\n    </Grid>\n  </div>\n);\n\nBookCardList.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string.isRequired,\n    paper: PropTypes.string.isRequired,\n  }).isRequired,\n  books: PropTypes.instanceOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles)(BookCardList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Chip } from '@material-ui/core';\nimport BookCardList from '../BookCard/BookCardList';\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n  chip: {\n    margin: theme.spacing.unit,\n  },\n});\n\nconst LibraryContent = ({\n  classes: { content, toolbar, chip },\n  filter,\n  onShelfChange,\n  onShelfFilter,\n  books,\n}) => (\n  <main className={content}>\n    <div className={toolbar} />\n    {filter && (\n      <Chip\n        color=\"primary\"\n        label=\"Mostrar todos os livros\"\n        onClick={() => onShelfFilter('')}\n        className={chip}\n      />\n    )}\n    <BookCardList\n      books={filter ? books.filter(book => book.shelf === filter) : books}\n      onShelfChange={onShelfChange}\n    />\n  </main>\n);\n\nLibraryContent.propTypes = {\n  classes: PropTypes.shape({\n    content: PropTypes.string.isRequired,\n    toolbar: PropTypes.string.isRequired,\n    chip: PropTypes.string.isRequired,\n  }).isRequired,\n  books: PropTypes.arrayOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n  onShelfFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(LibraryContent);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Book, Favorite, LocalLibrary } from '@material-ui/icons';\nimport LibraryDrawer from './LibraryDrawer';\nimport LibraryBar from './LibraryBar';\nimport LibraryContent from './LibraryContent';\n\nconst styles = () => ({\n  root: {\n    display: 'flex',\n  },\n});\n\nclass Library extends Component {\n  state = {\n    drawerOpen: false,\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ drawerOpen: !state.drawerOpen }));\n  };\n\n  render() {\n    const {\n      classes: { root },\n      container,\n      books,\n      onShelfChange,\n      onShelfFilter,\n      filter,\n    } = this.props;\n    const { drawerOpen } = this.state;\n\n    let shelfList = [\n      {\n        text: 'Quero Ler',\n        icon: <Favorite />,\n        id: 'wantToRead',\n        count: 0,\n      },\n      {\n        text: 'Lendo',\n        icon: <LocalLibrary />,\n        id: 'currentlyReading',\n        count: 0,\n      },\n      {\n        text: 'Lido',\n        icon: <Book />,\n        id: 'read',\n        count: 0,\n      },\n    ];\n\n    shelfList = shelfList.map((item) => {\n      const { id } = item;\n      const count = books.filter(({ shelf }) => shelf === id).length;\n      return { ...item, count };\n    });\n\n    return (\n      <div className={root}>\n        <CssBaseline />\n        <LibraryBar onDrawerToggle={this.handleDrawerToggle} />\n        <LibraryDrawer\n          list={shelfList}\n          onShelfFilter={onShelfFilter}\n          container={container}\n          drawerOpen={drawerOpen}\n          onDrawerToggle={this.handleDrawerToggle}\n        />\n        <LibraryContent\n          books={books}\n          onShelfChange={onShelfChange}\n          onShelfFilter={onShelfFilter}\n          filter={filter}\n        />\n      </div>\n    );\n  }\n}\n\nLibrary.defaultProps = {\n  container: null,\n};\n\nLibrary.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string.isRequired,\n  }).isRequired,\n  container: PropTypes.instanceOf(Object),\n  books: PropTypes.instanceOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n  onShelfFilter: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Library);\n","import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { RestLink } from 'apollo-link-rest';\nimport gql from 'graphql-tag';\n\nconst api = 'https://reactnd-books-api.udacity.com';\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token;\nif (!token) {\n  token = localStorage.token = Math.random()\n    .toString(36)\n    .substr(-8);\n}\n\nconst headers = {\n  Accept: 'application/json',\n  Authorization: token,\n  'Content-Type': 'application/json',\n};\n\nconst restLink = new RestLink({\n  uri: api, // this is your API base url\\\n  headers,\n});\n\nconst client = new ApolloClient({\n  link: restLink,\n  cache: new InMemoryCache(),\n});\n\nconst getAllBooks = gql`\n  query {\n    books @rest(type: \"Books\", path: \"/books\") {\n      books @type(name: \"Book\") {\n        title\n        authors\n        imageLinks @type(name: \"ImageLinks\") {\n          smallThumbnail\n        }\n        id\n        shelf\n      }\n    }\n  }\n`;\n\nconst getBook = gql`\n  query get {\n    book(id: $id) @rest(type: \"Books\", path: \"/books/:id\") {\n      book @type(name: \"Book\") {\n        title\n        authors\n        imageLinks @type(name: \"ImageLinks\") {\n          smallThumbnail\n        }\n        id\n        shelf\n      }\n    }\n  }\n`;\n\nconst searchBooks = gql`\n  mutation search {\n    search(input: $input) @rest(type: \"Books\", path: \"/search\", method: \"POST\") {\n      books @type(name: \"Book\") {\n        title\n        authors\n        imageLinks @type(name: \"ImageLinks\") {\n          smallThumbnail\n        }\n        id\n        shelf\n      }\n    }\n  }\n`;\n\nconst updateShelf = gql`\n  mutation update {\n    update(input: $input, id: $id) @rest(type: \"Shelfs\", path: \"/books/:id\", method: \"PUT\") {\n      currentlyReading\n      wantToRead\n      read\n    }\n  }\n`;\n\nexport const get = bookId => client.query({ query: getBook, variables: { id: bookId } }).then(res => res.data.book.book);\n\nexport const getAll = () => client.query({ query: getAllBooks }).then(res => res.data.books.books);\n\nexport const update = (book, shelf) => client\n  .mutate({\n    mutation: updateShelf,\n    variables: { input: { shelf }, id: book.id },\n  })\n  .then(res => res.data.update);\n\nexport const search = query => client\n  .mutate({\n    mutation: searchBooks,\n    variables: { input: { query } },\n  })\n  .then(res => res.data.search.books);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { InputBase } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\n\nconst styles = theme => ({\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: theme.spacing.unit,\n    width: '100%',\n  },\n  searchIcon: {\n    width: theme.spacing.unit * 9,\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: '100%',\n  },\n  inputInput: {\n    paddingTop: theme.spacing.unit,\n    paddingRight: theme.spacing.unit,\n    paddingBottom: theme.spacing.unit,\n    paddingLeft: theme.spacing.unit * 10,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n  },\n});\n\nclass SearchInput extends Component {\n  state = {\n    pesquisa: '',\n  };\n\n  handleInputChange = (e) => {\n    this.setState({ pesquisa: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    const { onSearch } = this.props;\n    const { pesquisa } = this.state;\n\n    onSearch(pesquisa);\n  };\n\n  render() {\n    const {\n      classes: {\n        search, searchIcon, inputInput, inputRoot,\n      },\n    } = this.props;\n    const { pesquisa } = this.state;\n\n    return (\n      <form className={search} onSubmit={this.handleSubmit}>\n        <div className={searchIcon}>\n          <SearchIcon />\n        </div>\n        <InputBase\n          placeholder=\"Digite o nome do livro ou do(s) autor(es)\"\n          classes={{\n            root: inputRoot,\n            input: inputInput,\n          }}\n          autoFocus\n          value={pesquisa}\n          onChange={this.handleInputChange}\n        />\n      </form>\n    );\n  }\n}\n\nSearchInput.propTypes = {\n  classes: PropTypes.shape({\n    search: PropTypes.string.isRequired,\n    searchIcon: PropTypes.string.isRequired,\n    inputInput: PropTypes.string.isRequired,\n    inputRoot: PropTypes.string.isRequired,\n  }).isRequired,\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchInput);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport ArrowBack from '@material-ui/icons/ArrowBack';\nimport { withRouter } from 'react-router-dom';\nimport IconButton from '../Components/IconButton';\nimport Text from '../Components/Text';\nimport SearchInput from './SearchInput';\n\nconst SearchBar = ({ history, onSearch }) => (\n  <AppBar position=\"fixed\">\n    <Toolbar>\n      <IconButton\n        color=\"inherit\"\n        onClick={() => {\n          history.push('/');\n        }}\n        icon={<ArrowBack />}\n      />\n      <Text text=\"Pesquisa\" variant=\"h6\" color=\"inherit\" />\n      <SearchInput onSearch={onSearch} />\n    </Toolbar>\n  </AppBar>\n);\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n  history: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default withRouter(SearchBar);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport BookCardList from '../BookCard/BookCardList';\n\nconst styles = theme => ({\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n  },\n});\n\nconst SearchContent = ({ classes: { content, toolbar }, onShelfChange, books }) => (\n  <main className={content}>\n    <div className={toolbar} />\n    <BookCardList books={books} onShelfChange={onShelfChange} />\n  </main>\n);\n\nSearchContent.propTypes = {\n  classes: PropTypes.shape({\n    content: PropTypes.string.isRequired,\n    toolbar: PropTypes.string.isRequired,\n  }).isRequired,\n  books: PropTypes.arrayOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchContent);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { search } from '../BooksAPI';\nimport SearchBar from './SearchBar';\nimport SearchContent from './SearchContent';\n\nconst styles = () => ({\n  root: {\n    width: '100%',\n  },\n});\n\nclass Search extends Component {\n  state = {\n    books: [],\n  };\n\n  handleSearch = (pesquisa) => {\n    if (pesquisa === '') {\n      this.setState({ books: [] });\n    } else {\n      search(pesquisa).then(books => this.setState({ books: books.error ? [] : books }));\n    }\n  };\n\n  render() {\n    const {\n      classes: { root },\n      books: booksProps,\n      onShelfChange,\n    } = this.props;\n\n    let { books: booksState } = this.state;\n\n    // Merge entre o livros da busca e os das estantes do usuario\n    booksState = booksState.map((bookState) => {\n      const [bookProps] = booksProps.filter(b => b.id === bookState.id);\n      if (bookProps) {\n        return { ...bookState, shelf: bookProps.shelf };\n      }\n      return bookState;\n    });\n\n    return (\n      <div className={root}>\n        <CssBaseline />\n        <SearchBar onSearch={this.handleSearch} />\n        <SearchContent books={booksState} onShelfChange={onShelfChange} />\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  classes: PropTypes.shape({\n    root: PropTypes.string.isRequired,\n  }).isRequired,\n  books: PropTypes.instanceOf(Object).isRequired,\n  onShelfChange: PropTypes.func.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Search);\n","import React, { Fragment, Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Library from './Library/Library';\nimport Search from './Search/Search';\nimport { getAll, update, get } from './BooksAPI';\n\nclass App extends Component {\n  // Books = livros que estam em alguma prateleira\n  // Filter = Filtra os livros por prateleira, em branco lista todos os livros\n  state = {\n    books: [],\n    filter: '',\n  };\n\n  // Busca todos os livros apos a montagem do componente\n  componentDidMount = () => getAll().then(books => this.setState({ books }));\n\n  // Controle do filtro atual usado\n  handleShelfFilter = filter => this.setState({ filter });\n\n  // Atualiza a prateleira do livro\n  handleShelfChange = (book, shelf) => {\n    // Se a nova prateleira for a mesma da atual, significa que nao eh\n    // para atualizar a prateleira mas para remove-la\n    const newShelf = book.shelf === shelf ? 'none' : shelf;\n    update(book, newShelf).then((booksList) => {\n      const { books } = this.state;\n      if (newShelf === 'none') {\n        // Se removeu a prateleira, remove do State\n        this.setState({ books: books.filter(b => b.id !== book.id) });\n      } else {\n        // Se atualizou a prateleira, atualiza no State\n\n        // Verifica se a atualizacao foi bem sucedida\n        const [bookId] = booksList[newShelf].filter(id => id === book.id);\n\n        // Busca o livro a ser atualizado\n        const [updatedBook] = books.filter(b => b.id === book.id);\n\n        // Atualizou com sucesso?\n        if (bookId) {\n          // Livro ja existe no State\n          if (updatedBook) {\n            // Apenas atualiza a prateleira\n            const index = books.indexOf(updatedBook);\n            books[index].shelf = newShelf;\n            this.setState({ books });\n          } else {\n            // Se nao, busca o livro e concatena no final do State\n            get(bookId).then((b) => {\n              this.setState({ books: [...books, b] });\n            });\n          }\n        }\n      }\n    });\n  };\n\n  render() {\n    const { books, filter } = this.state;\n    return (\n      <Fragment>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <Library\n              onShelfChange={this.handleShelfChange}\n              books={books}\n              onShelfFilter={this.handleShelfFilter}\n              filter={filter}\n            />\n          )}\n        />\n        <Route\n          exact\n          path=\"/search\"\n          render={() => <Search onShelfChange={this.handleShelfChange} books={books} />}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nwindow.__MUI_USE_NEXT_TYPOGRAPHY_VARIANTS__ = true;\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}